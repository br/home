#!/bin/bash

alias gs="pushd ./\$($(type -P git) rev-parse --show-cdup) > /dev/null; $(type -P git) submodule summary; popd > /dev/null; $(type -P git) status -s --ignore-submodules=dirty" # TODO add -b back with autodetect
alias gl="$(type -P git) lg"
alias gd="$(type -P git) difftool"
alias gm="$(type -P git) mergetool"

function gdiff {
  local len="$(git diff --no-ext-diff -w -b "$@" | wc -l | awk '{print $1}')"

  if [[ "$len" != 0 ]]; then
    $(type -P git) diff --no-ext-diff -w -b "$@" | vim -R -
  fi
}

# http://jeetworks.org/node/52
function cdd {
  if [[ $(which git 2> /dev/null) ]]; then
    STATUS=$(git status --ignore-submodules=dirty 2>/dev/null)
    if [[ -z $STATUS ]]; then
      return
    fi
    TARGET="./$(git rev-parse --show-cdup)$1"
    cd $TARGET
  fi
}

function _cdd {
  if [[ $(which git 2> /dev/null) ]]; then
    STATUS=$(git status --ignore-submodules=dirty 2>/dev/null)
    if [[ -z $STATUS ]]; then
      return
    fi
    TARGET="./$(git rev-parse --show-cdup)"
    if [[ -d $TARGET ]]; then
      TARGET="$TARGET/"
    fi
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}$2"
    dirnames=$(cd $TARGET; compgen -o dirnames $2)
    opts=$(for i in $dirnames; do  if [[ $i != ".git" ]]; then echo $i/; fi; done)
    if [[ ${cur} == * ]] ; then
      COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
      return 0
    fi
  fi
}

complete -o nospace -F _cdd cdd

PATH="$PATH:/usr/local/git/bin"
