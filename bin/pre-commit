#!/bin/bash
#
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#

# if Gemfile.lock has been modified
modified="$(git status --porcelain Gemfile.lock | egrep -v '^[:blank:]' | cut -b1-2)"
if [[ -n $modified ]]; then
  # must detect a clean index and set error to 0 explicitly
  error=1

  if echo "$modified" | egrep -q "^M"; then
    # status M[ ]
    if echo "$modified" | egrep -q "^M[ ]"; then
      git stash -q -u --keep-index 2>&1 | egrep -v '^Not removing'

      if egrep -q "^PATH" Gemfile.lock; then
        echo "local paths to Gemfile.lock are not permitted"
        error=1
      else
        error=0
      fi

      git reset --hard
      git stash pop -q --index
    else
      # status M?
      echo "Gemfile.lock added to index but also have local changes.  Either reset the file or add your local changes."
      error=1
    fi
  elif echo "$modified" | egrep -q "^[ ]"; then
    # status [ ]?
    error=0
  else
    # status ??
    echo "Gemfile.lock in a weird state.  Make sure it is not deleted or in conflict."
    error=1
  fi

  exit $error
fi
