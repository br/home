#!/bin/bash

#/ NAME
#/     build -- builds static site using jekyll
#/
#/ SYNOPSIS
#/     build site

# figure out the project root under which bin, lib live
shome="$(cd -P -- "$(dirname -- "$BASH_SOURCE")/.." && pwd -P)"

# load a jason bourne library
source "$shome/bin/_treadstone"

# entry point
function main {
  if [[ "$#" < 1 ]]; then
    logger_fatal "missing component(s)"
    exit 1
  fi

  local nm_component="$1"; shift
  case "$nm_component" in 
    site)
      build_site "$@"
      ;;
    image)
      build_image "$@"
      ;;
    *)
      logger_fatal "don't know how to build ${nm_component}"
      exit 1
      ;;
  esac
}

function build_image {
  local nm_image="$1"; shift

  hdiutil create -attach -volname "${nm_image}" -size "${FLAGS_size}gb" -fs "Journaled HFS+" "${nm_image}"
  diskutil coreStorage convert "${nm_image}" -passphrase "${nm_image}"
  while true; do
    local status="$(diskutil coreStorage info "${nm_image}" | grep "Conversion Status:" | awk '{print $3}')"
    if [[ "$status" = "Complete" ]]; then
      break
    fi

    diskutil coreStorage info "${nm_image}" | egrep "LV Bytes Converted|LV Size"
    echo
    sleep 5
  done

  diskutil eject "$nm_image"
}

# build the site with jekyll
function build_site {
  export BUNDLE_GEMFILE="$shome/.doc/Gemfile"
  bundle check 2>&1 >/dev/null || { bundle install --quiet --local --path vendor/bundle || bundle check > /dev/null; }

  local old_path="$PATH"
  PATH="$PATH:$shome/libexec"

  pushd "$shome/site/theme" > /dev/null
  bundle exec compass compile
  popd > /dev/null

  pushd "$shome/site" > /dev/null
  bundle exec jekyll
  popd > /dev/null

  PATH="$old_path"
}

# define command line options:
#   var name, default, description, short option
DEFINE_string size "1" "size in gigabytes of the image" "S"

# parse the command-line
parse_command_line "$@" || exit $?
eval set -- "${FLAGS_ARGV}"

# pass arguments to entry point
main "$@"
